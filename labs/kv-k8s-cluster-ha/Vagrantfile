# kuberverse k8s lab provisioner
# type: kubeadm-calico-full-cluster-bootstrap
# created by Artur Scheiner - artur.scheiner@gmail.com
# dependencies: https://raw.githubusercontent.com/arturscheiner/kuberverse/master/labs/kv-k8s-cluster-ha/common.sh
#               https://raw.githubusercontent.com/arturscheiner/kuberverse/master/labs/kv-k8s-cluster-ha/scaler.sh
#               https://raw.githubusercontent.com/arturscheiner/kuberverse/master/labs/kv-k8s-cluster-ha/master.sh
#               https://raw.githubusercontent.com/arturscheiner/kuberverse/master/labs/kv-k8s-cluster-ha/worker.sh

BOX_IMAGE = "bento/ubuntu-16.04"

MASTER_COUNT = 1
WORKER_COUNT = 1

KV_LAB_NETWORK = "10.8.8.0"
POD_CIDR = "172.18.0.0/16"
#API_ADV_ADDRESS = "10.8.8.10"

#SCALER_IP = KV_LAB_NETWORK.split('.')[0..-2].join('.') + ".50"

#SCALER_ADDRESS = "10.8.8.6"
KVMSG = "Kuberverse"

COMMON_SCRIPT_URL = "https://raw.githubusercontent.com/arturscheiner/kuberverse/master/labs/kv-k8s-cluster-ha/common.sh"
SCALER_SCRIPT_URL = "https://raw.githubusercontent.com/arturscheiner/kuberverse/master/labs/kv-k8s-cluster-ha/scaler.sh"
MASTER_SCRIPT_URL = "https://raw.githubusercontent.com/arturscheiner/kuberverse/master/labs/kv-k8s-cluster-ha/master.sh"
WORKER_SCRIPT_URL = "https://raw.githubusercontent.com/arturscheiner/kuberverse/master/labs/kv-k8s-cluster-ha/worker.sh"

def defineIp(type,i,kvln)
  case type
  when "master" 
    kvln.split('.')[0..-2].join('.') + ".#{i + 10}"
  when "worker"
    kvln.split('.')[0..-2].join('.') + ".#{i + 20}"
  when "scaler"
    kvln.split('.')[0..-2].join('.') + ".#{i + 50}"
end

def createScaler(i,config)
    p "Starting Scaler"
    scalerIp = defineIp("scaler",i,KV_LAB_NETWORK)
    config.vm.define "kv-scaler-#{i}" do |ha|    
      ha.vm.box = BOX_IMAGE
      ha.vm.hostname = "kv-scaler-#{i}"
      ha.vm.network :private_network, ip: scalerIp
      ha.vm.network "forwarded_port", guest: 6443, host: 6443
      ha.vm.provision "shell" do |s|
        s.inline = <<-SCRIPT
          mkdir -p /home/vagrant/.kv
          wget -q #{SCALER_SCRIPT_URL} -O /home/vagrant/.kv/scaler.sh
          chmod +x /home/vagrant/.kv/scaler.sh
          /home/vagrant/.kv/scaler.sh #{KVMSG} #{MASTER_COUNT} #{scalerIp}
        SCRIPT
      end
    end
end

Vagrant.configure("2") do |config|
  p "Initializing Vagrant"
  if MASTER_COUNT > 1 then
    # createScaler(0,config)
    i = 0
    p "Starting Scaler"
    scalerIp = defineIp("scaler",i,KV_LAB_NETWORK)
    config.vm.define "kv-scaler-#{i}" do |ha|    
      ha.vm.box = BOX_IMAGE
      ha.vm.hostname = "kv-scaler-#{i}"
      ha.vm.network :private_network, ip: scalerIp
      ha.vm.network "forwarded_port", guest: 6443, host: 6443
      ha.vm.provision "shell" do |s|
        s.inline = <<-SCRIPT
          mkdir -p /home/vagrant/.kv
          wget -q #{SCALER_SCRIPT_URL} -O /home/vagrant/.kv/scaler.sh
          chmod +x /home/vagrant/.kv/scaler.sh
          /home/vagrant/.kv/scaler.sh #{KVMSG} #{MASTER_COUNT} #{scalerIp}
        SCRIPT
      end
    end   
  end

  (0..MASTER_COUNT-1).each do |i|

    masterIp = defineIp("master",i,KV_LAB_NETWORK)

    config.vm.define "kv-master-#{i}" do |subconfig|
      subconfig.vm.box = BOX_IMAGE
      subconfig.vm.hostname = "kv-master-#{i}"
      subconfig.vm.network :private_network, ip: masterIp
      subconfig.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--cpus", 2]
        vb.memory = 2048
      end

      # This if is here just to remember me to create a multi-master cluster
      # the behavior and overal configuration is different and this will require a HAProxy installation
      #if i == 0

        subconfig.vm.provision "shell" do |s|
          s.inline = <<-SCRIPT
            mkdir -p /home/vagrant/.kv

            wget -q #{COMMON_SCRIPT_URL} -O /home/vagrant/.kv/common.sh
            chmod +x /home/vagrant/.kv/common.sh
            /home/vagrant/.kv/common.sh #{KVMSG}

            wget -q #{MASTER_SCRIPT_URL} -O /home/vagrant/.kv/master.sh
            chmod +x /home/vagrant/.kv/master.sh
            # /home/vagrant/.kv/master.sh #{KVMSG} #{i} #{POD_CIDR} #{masterIp}
          SCRIPT
        end

      #end

    end
  end
  
  (0..WORKER_COUNT-1).each do |i|

    workerIp = defineIp("worker",i,KV_LAB_NETWORK)

    config.vm.define "kv-worker-#{i}" do |subconfig|
      subconfig.vm.box = BOX_IMAGE
      subconfig.vm.hostname = "kv-worker-#{i}"
      subconfig.vm.network :private_network, ip: workerIp
      subconfig.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--cpus", 2]
        vb.memory = 1024
      end

      subconfig.vm.provision "shell" do |s|
        s.inline = <<-SCRIPT
          mkdir -p /home/vagrant/.kv

          wget -q #{COMMON_SCRIPT_URL} -O /home/vagrant/.kv/common.sh
          chmod +x /home/vagrant/.kv/common.sh
          /home/vagrant/.kv/common.sh #{KVMSG}

          wget -q #{WORKER_SCRIPT_URL} -O /home/vagrant/.kv/worker.sh
          chmod +x /home/vagrant/.kv/worker.sh
          #/home/vagrant/.kv/worker.sh #{KVMSG} #{i} #{workerIp}
        SCRIPT
      end

    end
  end

  config.vm.provision "shell",
   run: "always",
   inline: "swapoff -a"

end
end