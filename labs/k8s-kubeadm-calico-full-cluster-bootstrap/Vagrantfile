# kuberverse k8s lab provisioner
# type: kubeadm-calico-full-cluster-bootstrap
# created by Artur Scheiner - artur.scheiner@gmail.com

BOX_IMAGE = "bento/ubuntu-16.04"
MASTER_COUNT = 1
WORKER_COUNT = 2
POD_CIDR = "172.18.0.0/16"

Vagrant.configure("2") do |config|

  (0..MASTER_COUNT-1).each do |i|
    config.vm.define "kv-master-#{i}" do |subconfig|
      subconfig.vm.box = BOX_IMAGE
      subconfig.vm.hostname = "kv-master-#{i}"
      subconfig.vm.network :private_network, ip: "10.8.8.#{i + 10}"
      subconfig.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--cpus", 2]
        vb.memory = 2048
      end

      # Installing the necessary packages for this provisioner  
      subconfig.vm.provision "shell", inline: <<-SHELL
        echo "deb  http://apt.kubernetes.io/  kubernetes-xenial  main" > /etc/apt/sources.list.d/kubernetes.list
        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
        apt-get update
        apt-get upgrade -y
        apt-get install -y avahi-daemon libnss-mdns traceroute htop httpie bash-completion docker.io kubeadm kubelet kubectl
      SHELL

      if i == 0
        # Starting the creation of the k8s cluster and adjusting configurations  
        subconfig.vm.provision "shell", inline: <<-SHELL
          kubeadm init --pod-network-cidr #{POD_CIDR} --apiserver-advertise-address 10.8.8.10 | tee /vagrant/kubeadm-init.out
          mkdir -p /home/vagrant/.kube       
          cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
          chown vagrant:vagrant /home/vagrant/.kube/config

          mkdir -p /root/.kube
          cp -i /etc/kubernetes/admin.conf /root/.kube/config

         #Configure the Calico Network Plugin
         wget https://bit.ly/kv-lab-k8s-calico-yaml -O /tmp/calico-default.yaml
         sed "s+192.168.0.0/16+#{POD_CIDR}+g" /tmp/calico-default.yaml > /tmp/calico-defined.yaml
         kubectl apply -f /tmp/calico-defined.yaml
         rm /tmp/calico-default.yaml /tmp/calico-defined.yaml
         echo KUBELET_EXTRA_ARGS=--node-ip=10.8.8.10 > /etc/default/kubelet
        SHELL
      end

    end
  end
  
  (0..WORKER_COUNT-1).each do |i|
    config.vm.define "kv-worker-#{i}" do |subconfig|
      subconfig.vm.box = BOX_IMAGE
      subconfig.vm.hostname = "kv-worker-#{i}"
      subconfig.vm.network :private_network, ip: "10.8.8.#{i + 20}"
      subconfig.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--cpus", 2]
        vb.memory = 1024
      end

      # Installing the necessary packages for this provisioner   
      subconfig.vm.provision "shell", inline: <<-SHELL
        echo "deb  http://apt.kubernetes.io/  kubernetes-xenial  main" > /etc/apt/sources.list.d/kubernetes.list
        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
        apt-get update
        apt-get upgrade -y
        apt-get install -y avahi-daemon libnss-mdns traceroute htop httpie bash-completion docker.io kubeadm kubelet kubectl

        # Extract and execute the kubeadm join command from the exported file
        $(cat /vagrant/kubeadm-init.out | grep -A 2 "kubeadm join" | sed -e 's/^[ \t]*//' | tr '\n' ' ' | sed -e 's/ \\ / /g')
        echo KUBELET_EXTRA_ARGS=--node-ip=10.8.8.#{i + 20} > /etc/default/kubelet
      SHELL
    end
  end

  config.vm.provision "shell",
   run: "always",
   inline: "swapoff -a"

end
